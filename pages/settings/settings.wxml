<view class="container">
  <!-- 用户信息卡片 -->
  <view class="card user-card">
    <view class="card-content">
      <view class="user-info">
        <view class="avatar-section">
          <view wx:if="{{ currentUser.avatar }}" class="user-avatar">
            <image src="{{ currentUser.avatar }}" />
          </view>
          <view wx:else class="user-avatar default-avatar">
            <text>👤</text>
          </view>
          <button class="avatar-edit-btn" bindtap="changeAvatar">
            <text>📷</text>
          </button>
        </view>
        <view class="user-details">
          <view class="user-name">{{ currentUser.displayName || currentUser.name || '未命名用户' }}</view>
          <view class="user-email">{{ currentUser.email }}</view>
          <view class="user-stats">
            <text class="stat-item">📝 {{ userStats.totalMemos }}条记录</text>
            <text class="stat-item">📋 {{ userStats.planningMemos }}条规划</text>
            <text class="stat-item">🗓️ 注册{{ userStats.daysSinceCreated }}天</text>
          </view>
        </view>
      </view>
      <view class="user-actions">
        <button class="btn btn-secondary" bindtap="editProfile">编辑资料</button>
        <button class="btn btn-logout" bindtap="logout">退出登录</button>
      </view>
    </view>
  </view>

  <!-- 用户切换 -->
  <view class="card" wx:if="{{ users.length > 1 }}">
    <view class="card-content">
      <view class="title">👥 用户切换</view>
      <view class="user-list">
        <view 
          class="user-item {{ item.id === currentUser.id ? 'active' : '' }}"
          wx:for="{{ users }}" 
          wx:key="id"
          bindtap="switchUser"
          data-user-id="{{ item.id }}"
        >
          <view wx:if="{{ item.avatar }}" class="user-item-avatar">
            <image src="{{ item.avatar }}" />
          </view>
          <view wx:else class="user-item-avatar default-avatar">
            <text>👤</text>
          </view>
          <view class="user-item-info">
            <view class="user-item-name">{{ item.displayName || item.name }}</view>
            <view class="user-item-email">{{ item.email }}</view>
            <view class="user-item-stats">{{ item.memoCount }}条记录</view>
          </view>
          <view wx:if="{{ item.id === currentUser.id }}" class="current-indicator">
            <text>✓</text>
          </view>
        </view>
      </view>
      <button class="btn btn-primary" bindtap="addNewUser">+ 添加新用户</button>
    </view>
  </view>

  <!-- Notion集成 -->
  <view class="card">
    <view class="card-content">
      <view class="section-header">
        <view class="title">🔗 Notion集成</view>
        <view class="notion-status-indicator">
          <text class="status-text {{ notionConfigured ? 'connected' : 'disconnected' }}">
            {{ notionConfigured ? '已配置' : '未配置' }}
          </text>
        </view>
      </view>

      <!-- 配置方式选择 -->
      <view class="config-mode-selector" wx:if="{{ !notionConfigured }}">
        <view class="mode-title">配置方式</view>
        <radio-group bindchange="onConfigModeChange" class="radio-group">
          <label class="radio-item">
            <radio value="auto" checked="{{ configMode === 'auto' }}" color="#6366f1"/>
            <text>🚀 自动创建数据库（推荐）</text>
          </label>
          <label class="radio-item">
            <radio value="manual" checked="{{ configMode === 'manual' }}" color="#6366f1"/>
            <text>⚙️ 使用已有数据库</text>
          </label>
        </radio-group>
      </view>

      <!-- 自动创建模式 -->
      <view class="auto-create-section" wx:if="{{ configMode === 'auto' && !notionConfigured }}">
        <view class="input-group">
          <view class="input-label">Notion API Key</view>
          <input
            class="notion-input"
            placeholder="请输入API Key"
            value="{{ notionConfig.apiKey }}"
            bindinput="onNotionApiKeyInput"
          />
        </view>
        <view class="input-group">
          <view class="input-label">父页面ID</view>
          <input
            class="notion-input"
            placeholder="请输入Notion父页面ID"
            value="{{ notionConfig.parentPageId }}"
            bindinput="onParentPageIdInput"
          />
          <view class="input-hint">💡 在Notion中创建一个页面，从URL中复制页面ID</view>
        </view>
        <button
          class="btn btn-primary btn-create"
          bindtap="autoCreateDatabases"
          loading="{{ creating }}"
          disabled="{{ creating || !notionConfig.apiKey || !notionConfig.parentPageId }}"
        >
          <text>{{ creating ? '创建中...' : '🚀 自动创建数据库' }}</text>
        </button>
      </view>

      <!-- 手动配置模式 -->
      <view class="manual-config-section" wx:if="{{ configMode === 'manual' && !notionConfigured }}">
        <view class="input-group">
          <view class="input-label">Notion API Key</view>
          <input
            class="notion-input"
            placeholder="请输入API Key"
            value="{{ notionConfig.apiKey }}"
            bindinput="onNotionApiKeyInput"
          />
        </view>

        <view class="section-title">🎯 八数据库配置（推荐）</view>

        <view class="input-group">
          <view class="input-label">🎯 目标库ID (Goals)</view>
          <input
            class="notion-input"
            placeholder="请输入目标库数据库ID"
            value="{{ notionConfig.goalsDatabaseId }}"
            bindinput="onGoalsDatabaseIdInput"
          />
        </view>

        <view class="input-group">
          <view class="input-label">✅ 待办库ID (Todos)</view>
          <input
            class="notion-input"
            placeholder="请输入待办库数据库ID"
            value="{{ notionConfig.todosDatabaseId }}"
            bindinput="onTodosDatabaseIdInput"
          />
        </view>

        <view class="input-group">
          <view class="input-label">📝 主记录表ID (Main Records)</view>
          <input
            class="notion-input"
            placeholder="请输入主记录表数据库ID"
            value="{{ notionConfig.mainDatabaseId }}"
            bindinput="onMainDatabaseIdInput"
          />
        </view>

        <view class="input-group">
          <view class="input-label">⏱️ 活动明细表ID (Activities)</view>
          <input
            class="notion-input"
            placeholder="请输入活动明细表数据库ID"
            value="{{ notionConfig.activityDatabaseId }}"
            bindinput="onActivityDatabaseIdInput"
          />
        </view>

        <view class="input-group">
          <view class="input-label">📊 每日状态库ID (Daily Status) <text class="required-mark">*必填</text></view>
          <input
            class="notion-input"
            placeholder="请输入每日状态库数据库ID"
            value="{{ notionConfig.dailyStatusDatabaseId }}"
            bindinput="onDailyStatusDatabaseIdInput"
          />
          <view class="input-hint">💡 如果要使用每日状态功能，此项必填</view>
        </view>

        <view class="input-group">
          <view class="input-label">😊 开心库ID (Happy Things) <text class="required-mark">*必填</text></view>
          <input
            class="notion-input"
            placeholder="请输入开心库数据库ID"
            value="{{ notionConfig.happyThingsDatabaseId }}"
            bindinput="onHappyThingsDatabaseIdInput"
          />
          <view class="input-hint">💡 如果要使用开心事管理功能，此项必填</view>
        </view>

        <view class="input-group">
          <view class="input-label">💬 箴言库ID (Quotes) <text class="required-mark">*必填</text></view>
          <input
            class="notion-input"
            placeholder="请输入箴言库数据库ID"
            value="{{ notionConfig.databases.quotes }}"
            bindinput="onQuotesDatabaseIdInput"
          />
          <view class="input-hint">💡 如果要使用每日箴言功能，此项必填</view>
        </view>

        <view class="input-group">
          <view class="input-label">📚 知识库ID (Knowledge) <text class="required-mark">*必填</text></view>
          <input
            class="notion-input"
            placeholder="请输入知识库数据库ID"
            value="{{ notionConfig.databases.knowledge }}"
            bindinput="onKnowledgeDatabaseIdInput"
          />
          <view class="input-hint">💡 如果要使用知识库功能，此项必填</view>
        </view>

        <button class="btn btn-primary" bindtap="saveManualConfig">
          <text>💾 保存配置</text>
        </button>
      </view>

      <!-- 已配置状态显示 -->
      <view class="notion-info" wx:if="{{ notionConfigured }}">
        <view class="info-row">
          <text class="info-label">同步状态:</text>
          <text class="info-value {{ notionConfig.enabled ? 'enabled' : 'disabled' }}">
            {{ notionConfig.enabled ? '已启用' : '已禁用' }}
          </text>
        </view>
        <view class="info-row" wx:if="{{ notionConfig.initialized !== undefined }}">
          <text class="info-label">数据库初始化:</text>
          <text class="info-value {{ notionConfig.initialized ? 'enabled' : 'disabled' }}">
            {{ notionConfig.initialized ? '✅ 已完成' : '⚠️ 未完成' }}
          </text>
        </view>
        <view class="info-row" wx:if="{{ notionConfig.initialized && notionConfig.initializedFields && notionConfig.initializedFields.length > 0 }}">
          <text class="info-label">初始化字段:</text>
          <text class="info-value">{{ notionConfig.initializedFields.length }}个</text>
        </view>
        <view class="info-row" wx:if="{{ notionConfig.enabled && lastSyncTime }}">
          <text class="info-label">上次同步:</text>
          <text class="info-value">{{ lastSyncTime }}</text>
        </view>
        <view class="info-row" wx:if="{{ notionConfig.enabled }}">
          <text class="info-label">待同步:</text>
          <text class="info-value">{{ pendingMemos }}条记录</text>
        </view>
      </view>

      <view class="notion-actions" wx:if="{{ notionConfigured }}">
        <button class="btn btn-primary" bindtap="configureNotion">
          <text>{{ notionConfigured ? '⚙️ 重新配置' : '🔗 配置Notion' }}</text>
        </button>
        <button class="btn btn-secondary" bindtap="diagnoseDatabases"
                wx:if="{{ notionConfig.enabled }}"
                loading="{{ diagnosing }}">
          <text>{{ diagnosing ? '诊断中...' : '🔍 诊断数据库' }}</text>
        </button>
        <button class="btn btn-warning" bindtap="fixMainRecords"
                wx:if="{{ notionConfig.enabled }}">
          <text>🔧 修复主记录表</text>
        </button>
      </view>
    </view>
  </view>

  <!-- 箴言设置 -->
  <view class="card">
    <view class="card-content">
      <view class="title">💫 箴言设置</view>

      <view class="setting-item">
        <view class="setting-info">
          <view class="setting-name">只显示我的箴言</view>
          <view class="setting-desc">首页箴言只从我添加的箴言中随机显示</view>
        </view>
        <switch
          checked="{{ quoteSettings.onlyMyQuotes }}"
          bindchange="toggleOnlyMyQuotes"
          color="#6366f1"
        />
      </view>
    </view>
  </view>

  <!-- 关于 -->
  <view class="card">
    <view class="card-content">
      <view class="title">ℹ️ 关于</view>
      <view class="about-info">
        <view class="about-item">
          <text class="about-label">版本号:</text>
          <text class="about-value">v1.0.0</text>
        </view>
        <view class="about-item">
          <text class="about-label">开发者:</text>
          <text class="about-value">Claude Code</text>
        </view>
        <view class="about-item">
          <text class="about-label">更新时间:</text>
          <text class="about-value">2025年1月</text>
        </view>
      </view>
    </view>
  </view>
</view>